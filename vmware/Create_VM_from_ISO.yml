---
- hosts: all
  gather_facts: false
  connection: local

  vars:
    disk: '80' 

  tasks:
    - debug: var=vcenter_hostname
    - debug: var=esxi_host
    - debug: var=datacenter
    - debug: var=iso
    - debug: var=osid
    - debug: var=cpucount
    - debug: var=memory
    - debug: var=network
    - debug: var=datastore
    - debug: var=disk
    - debug: var=notes
    - debug: var=manageiq.api_url
    - debug: var=manageiq.api_token
    - debug: var=manageiq.service


    - name: Set the Service URL
      set_fact:
        svc_url: "/api/{{ manageiq.service }}"

    - debug: var=svc_url        

    - name: Create Virtual Machines
      vsphere_guest:
        validate_certs: no
        vcenter_hostname: "{{ vcenter_hostname }}"
        guest: "{{ inventory_hostname }}"
        state: powered_on
        vm_extra_config:
          notes: "{{ notes }}"
        vm_disk:
          disk1:
            size_gb: "{{ disk }}"
            type: thin
            datastore: "{{ datastore }}"
        vm_nic:
          nic1:
            type: vmxnet3
            network: "{{ network }}"
            network_type: standard
        vm_hardware:
          memory_mb: "{{ memory }}"
          num_cpus: "{{ cpucount }}"
          osid: "{{ osid }}"
          scsi: paravirtual
          vm_cdrom:
            type: "iso"
            iso_path: "{{ iso }}"
        esxi:
          datacenter: "{{ datacenter }}"
          hostname: "{{ esxi_host }}"
      register: new_vm

    - debug: var=new_vm    

    - set_fact: new_vm_uuid="{{ new_vm.json.ansible_facts.hw_product_uuid }}"

    - debug: var=new_vm_uuid    

    - name: Create an array of vms
      set_fact:
        vms: "{{ vms|default([]) + [ { 'href': svc_url, 'resource':  { 'href': item } } ] }}"
      with_items:
        - "{{ vm_url }}"

    - debug: var=vms
