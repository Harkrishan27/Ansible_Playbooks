# John Hardy
# Get IP from PHPIPAM
---
- hosts: localhost

  vars:
    cidr: "10.9.62.0/24"
    token: ""
    username: "admin"
    password: "password"
    ipam_server: "10.9.61.97"
    token_url: "http://{{ ipam_server }}/api/cfme/user/"
    
  roles:
  - syncrou.manageiq-automate
  - syncrou.manageiq-vmdb
  
  tasks:
    - name: Set the automate workspace url
      set_fact:
        aws_url: "{{ manageiq.api_url }}/api/{{ manageiq.automate_workspace }}"
        
    - name: Call to get token
      uri:
        url: "{{ token_url }}"
        method: POST
        user: "{{ username }}"
        password: "{{ password }}"
        force_basic_auth: yes
        validate_certs: no
        headers:
           Content-Type: "application/json"
        body_format: json
        return_content: yes
      register: token_output

    - set_fact: token="{{ token_output.json.data.token }}"

    - debug:
        msg: "IPAM Token is {{ token }}"

    - name: Call to find subnet id
      uri:
        url: "http://{{ ipam_server }}/api/cfme/subnets/cidr/{{ cidr }}/"
        method: GET
        validate_certs: no
        headers:
           Content-Type: "application/json"
           token: "{{ token }}"
        body_format: json
        return_content: yes
      register: token_output

    - set_fact: subnet_href="{{ token_output.json.data[0].links[0].href }}"

    - debug:
        msg: "IPAM {{ cidr }} returned ID {{ subnet_href }}"

    - name: Call to first IP address
      uri:
        url: "http://{{ ipam_server }}{{ subnet_href }}first_free/"
        method: GET
        validate_certs: no
        headers:
           Content-Type: "application/json"
           token: "{{ token }}"
        body_format: json
        return_content: yes
      register: free_ip

    - set_fact: ipaddress="{{ free_ip.json.data }}"

    - debug:
        msg: "IPAM first free address is {{ ipaddress }}"

    - name: Fetch the Workspace
      uri:
        url: "{{ aws_url }}"
        method: GET 
        validate_certs: False
        headers:
          X-Auth-Token: "{{ manageiq.api_token }}"
          Content-Type: "application/json" 
        status_code: 200 
      register: workspace

    - debug: var=workspace
 
    - set_fact: miq_provision_id="{{ workspace.json.input.objects.root.miq_provision_id }}"
 
    - debug: var=miq_provision_id
 
    - name: Update vmname in Task options
      manageiq_vmdb:
        href: "{{ manageiq.request_task }}"
        action: edit
        data: 
          options:
            ip_addr: "{{ ipaddress }}"
      register:    result

    - debug: msg="attribute result dictionary {{ result }}"
        
    - name: Fetch the Workspace
      uri:
        url: "{{ aws_url }}"
        method: GET 
        validate_certs: False
        headers:
          X-Auth-Token: "{{ manageiq.api_token }}"
          Content-Type: "application/json" 
        status_code: 200 
      register: workspace

    - debug: var=workspace
